language: generic
before_install:
  # decrypt the encrypted keystore
  - openssl aes-256-cbc -K $encrypted_71c5c0872413_key -iv $encrypted_71c5c0872413_iv -in keystore.jks.enc -out keystore.jks -d
  # disable services enabled by default
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  # login so we can push to dockerhub
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

before_deploy:
  # sign the apk
  - cp $TRAVIS_BUILD_DIR/.keystore $HOME
  - cd app/build/outputs/apk
  - jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore $HOME/keystore.jks -storepass $storepass -keypass $keypass app-release-unsigned.apk release-key
  # verify and zip-align the signed apk
  - jarsigner -verify app-release-unsigned.apk
  - "${ANDROID_HOME}/build-tools/24.0.2/zipalign -v 4 app-release-unsigned.apk smarthomeadapters_android.apk"

stages:
  - test
  - name: deploy
    provider: releases
    file: smarthomeadapters_android.apk
    skip_cleanup: true
    on:
      repo: mrbenshef/SmartHomeAdapters
      tags: true
      jdk: oraclejdk8
    api_key: apikey
  - name: deploy-test
    if: head_branch = webserver

jobs:
  include:
    - stage: test
      script: eval "$(gimme 1.11)" && make ci
    - stage: deploy
      script: make docker && make docker-push
    - stage: deploy-test
      script: make docker && make docker-push-test

env:
  global:
  - secure: rBzM32s6LkYGkDZIL+tC3lmRaXt7ae5nI2+S4OwDg8RvkFychkwloTagzY9ihQH/nAzOVHcr0IsNclHZL5m+Nyv531pTncqjqRmvbVr2fEkZnp5qZPHe80TV0JS/4acf1KStrNMi7xeHhBXito8x392R5KZz132YNoWQ/0++4gVZA8IiAfwoGQ/40pOd/Hp7tl+qqXAgSUyFaiAIvEtkZbwulebSFofHRIvijnG4SkmUpAept33I3RxB8WZQUXWLyW017W+yhXt1wOf1pF8fAvXkM1tk3e9Eb/VdRQwftsSVO5i6uBHfcYlX4rtX8T2ZbdqzT6IEN8eFf022GFugMKvwhD2iIGuvpeA4DLnb5CszQlejKFd57x2/naZ+nGf5tbVmelkw1001nbGpmweF2VpHOpotkNGZNpUPrhDGO0Fe7EObezlwMY32Yf2nmCApSIRMZyLqsuIhebTAsa8w2efGzShGs1EA7a3nKzHHsmet6ROFQtS3wzwqhXLBCUfrId/EDMtCqHIfOskVcf7mGTbXTAEV2VePDN9U881tP/ccNasHQX1W0o33lWBKR7tiJaeDTJ7GOeWsbJJbK0yh8JT8a37BzU4VQcHkVryjyBLKjpbmWoDyoYOhO2U+i9upYFsD2fMGLG8PuJQ7OAAlz1aNuuiUJXvCxtIL0aLeyHg=
  - secure: x/qvWPaUZLSpzVIKEyUhxuLanWWLQDqFPQzwBD4EmBFBEnYRdFyRcr8f5i3ucKi3OXxR03s+FIsH43I+YmHNZ14jq8C53Rc5UC9YKcGUD2sjywQHBIf6ZupETXx5H3sko2OUuamW5l0A3BsR8yP83zwuS+tWIbtCmhnRvIg7s/N03rbq2Qyulu35hcExzAzEazls7wlfqFKITFqQwmowj/9KVLxp5FdDOAoYZc/omJITH0eVkIMa1DGy04xfMu1Yl18bah5Bx7ce2Uj5Ws9yV4nRkakbtiAxmQ5/v9TSPGmfa1ak1V+v1dZZWjbZVlv0XCGg0I3olSzMbZ0yBiYwP3nsl7VsSN59KY0zw9wbk72TmAReuoVeCTAOHDMbOI9vRKjhSu51qaofuqWrdKhwh6eh8RanDheHZEUF5fGIz+PMfhbHRUlBQ3rksARuwcXeE8A6E56B37raZqKBUn3YpP9cLveDCKe6aKvCrvvqh4gyad5eA9w1BRM4dGVVUvCjIm9DsuOFAkyv2/JWebUIDCZxT950q6ODK+q8fbCLoXsX5RvNhxUslyldqINgJsKKz8YGeasiqrEVAKyndrbFlT2M2PwsD1uEcWk3OR7QVHP2tyJZQCCxhYw5LL3WoG0BsJfR8oBji3nHSO5oxUIOyHtMEaLfuI4Fa3STUhtnSzM=
    secure: Dcnm+Qia+IZ/P8+x876qVK9RoXUrxbPqwCCcqGWDY7w2NOPvcw0h8F+M1w8MMhOL+vkteEKIFRKWf5luBi3zN90OsHg8YudbOyisjw2c6Xr9LxOhB+tTgZjyLaGv3RfPkX1bJ/hRrODzqhmZULorrsiQTyc4HAyNf/EtEcxv6h3DjTTiPkpVBo8iy2x0CKIBaht7GkFFv4HkPraBPmXKQTprvvB0v13hnsKdBMkgwtXi8ZS3gmGlUehibkbM2mn0yyB6eOMcuSvvc0Ov6brHOMGOiJmqC8KQJDSNh8UV+3k6TXCI/o2hcFl7NCfN8NumEQsyeghOGpTzK2dW9PyrXbakMhLyPl7xof6sflhS8Qnc64EQrSs9cREmVuE4VZ85ur8Ec89H1Dw1C9p6tiOOEVu8AVMKb7dp4rGnY4qrTOkc4yIisLpTrF6TiKkByj3AzKiNA86Chti0WlmyNy53KH7nfS/on0QvLnddLF/c6AoTDKrrgx95rZzS8VVfv6KjsqOi0Aq8o/GSuWuR+fusB1HvHmW9a5/fyxO/IJ/jViBBnPqggY1LL2cN1cGhiq2nK7Vr3erLgvjKtYBgP3x6s/BQ1dH/6NiYzRXPlGFMCXQZKRtISy3hqUmeZ/4ZpJV2rLl+xIBTDxMT3t2DXPb4yeRGfLHPKNxjqfBHoG3rGGU=
