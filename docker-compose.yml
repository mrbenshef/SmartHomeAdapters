version: '3'

services:
  # database managment
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  # container management
  portainer:
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
  userdb:
    image: smarthomeadapters/userdb
    build:
      context: ./services/userdb
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - userdb_data:/var/lib/postgresql/data
  userserver:
    image: smarthomeadapters/userserver
    build:
      context: ./services/userserver
    depends_on:
      - userdb
    restart: always
    ports:
      - 8081:80
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=postgres
      - DB_URL=userdb
  clientserver:
    image: smarthomeadapters/clientserver
    build:
      context: ./services/clientserver
    restart: always
    ports:
      - 80:80
  infodb:
    image: smarthomeadapters/infodb
    build: 
      context: ./services/infodb
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - infodb_data:/var/lib/postgresql/data
  infoserver:
    image: smarthomeadapters/infoserver
    build:
      context: ./services/infoserver
    depends_on:
      - infodb
    restart: always
    ports:
      - 9200:80
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=postgres
      - DB_URL=infodb
  switchdb:
    image: smarthomeadapters/switchdb
    build: 
      context: ./services/switchdb
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - switchdb_data:/var/lib/postgresql/data
  switchserver:
    image: smarthomeadapters/switchserver
    build:
      context: ./services/switchserver
    depends_on:
      - switchdb
    restart: always
    ports:
      - 8082:80
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=postgres
      - DB_URL=switchdb
  thermodb:
    image: smarthomeadapters/thermodb
    build:
      context: ./services/thermodb
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - thermodb_data:/var/lib/postgresql/data
  thermostatserver:
    image: smarthomeadapters/thermostatserver
    build:
      context: ./services/infoserver
    depends_on:
      - thermodb
    restart: always
    ports:
      - 8084:80
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=postgres
      - DB_URL=thermodb
  robotserver:
    image: smarthomeadapters/robotserver
    build:
      context: ./services/robotserver
    restart: always
    ports:
      - 8083:80
  usecasedb:
    image: smarthomeadapters/usecasedb
    build:
      context: ./services/usecasedb
    restart: always
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - usecasedb_data:/var/lib/postgresql/data
  usecaseserver:
    image: smarthomeadapters/usecaseserver
    build:
      context: ./services/usecaseserver
    restart: always
    depends_on:
      - usecasedb
      - robotserver
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_DATABASE=postgres
      - DB_URL=usecasedb
  account-app:
    image: smarthomeadapters/account-app
    build:
      context: ./services/account-app
    restart: always
    ports:
      - 4001:80
volumes:
  portainer_data:
  userdb_data:
  infodb_data:
  usecasedb_data:
  switchdb_data:
  thermodb_data:
